{"version":3,"sources":["helpers/index.tsx","table/search/styled.ts","table/search/index.tsx","table/dataLayout/styled.ts","table/dataLayout/index.tsx","table/pagination/styled.ts","table/pagination/index.tsx","table/index.tsx","create-data.ts","App.tsx","index.tsx"],"names":["handleSortState","key","prevSort","result","type","SORT_TYPES","asc","Object","objectSpread","desc","sortData","params","data","sort","toConsumableArray","a","b","applySearch","text","length","filter","item","values","map","Array","isArray","join","toString","includes","toLowerCase","keys","reduce","acc","currKey","itemContent","defineProperty","replace","RegExp","match","concat","SearchInput","styled","input","_templateObject","taggedTemplateLiteral","Search","React","props","react","onChange","e","onSearch","target","value","placeholder","StyledTable","table","styled_templateObject","Heading","th","_templateObject2","active","css","_templateObject3","sortType","_templateObject4","DataLayout","columns","column","onClick","handleSort","title","firstName","lastName","tags","content","render","dangerouslySetInnerHTML","__html","PaginationContainer","div","pagination_styled_templateObject","Pagination","react_paginate_default","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","activeClassName","containerClassName","Table","_useState","useState","limit","slicedToArray","_useState3","_useState4","offset","setOffset","dataToShow","slice","cutDataPerPage","handleSearch","Math","ceil","newPerson","statusChance","random","namor","words","numbers","saltLength","age","floor","visits","progress","status","_","MAX_DATA","renderTags","App","useMemo","changeSort","_useState5","_useState6","searchText","changeSearchText","dataSorted","dataFiltered","table_Table","rootElement","document","getElementById"],"mappings":"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","file":"static/js/main.ada7e5bf.chunk.js","sourcesContent":["import { IValue } from \"../table\";\r\nimport { SORT_TYPES } from \"../App\";\r\n\r\ninterface ICutParams {\r\n  data: { [key: string]: IValue }[];\r\n  limit: number;\r\n  offset: number;\r\n}\r\n\r\nexport const cutDataPerPage = (params: ICutParams) => {\r\n  const { data, limit, offset } = params;\r\n\r\n  return data.slice(offset, offset + limit);\r\n};\r\n\r\ninterface ISort {\r\n  key: string | null;\r\n  type: string;\r\n}\r\n\r\nexport const handleSortState = (key: string | null, prevSort: ISort) => {\r\n  const result = { key };\r\n\r\n  if (key === prevSort.key) {\r\n    if (prevSort.type === SORT_TYPES.asc) {\r\n      return {\r\n        ...result,\r\n        type: SORT_TYPES.desc\r\n      };\r\n    }\r\n\r\n    return {\r\n      key: null,\r\n      type: SORT_TYPES.asc\r\n    };\r\n  }\r\n\r\n  return { ...result, type: SORT_TYPES.asc };\r\n};\r\n\r\ninterface ISortData {\r\n  data: { [key: string]: IValue }[];\r\n  sort: ISort;\r\n}\r\n\r\nexport const sortData = (params: ISortData) => {\r\n  const { data, sort } = params;\r\n\r\n  if (sort.key === null) {\r\n    return data;\r\n  }\r\n\r\n  const resultData = [...data];\r\n\r\n  return resultData.sort((a, b) => {\r\n    if (sort.key === null) {\r\n      return 0;\r\n    }\r\n\r\n    const result = a[sort.key] > b[sort.key] ? 1 : -1;\r\n\r\n    if (sort.type === SORT_TYPES.desc) {\r\n      return result * -1;\r\n    }\r\n\r\n    return result;\r\n  });\r\n};\r\n\r\ninterface ISearch {\r\n  text: string;\r\n  data: { [key: string]: IValue }[];\r\n}\r\nexport const applySearch = (params: ISearch) => {\r\n  const { text, data } = params;\r\n\r\n  if (text.length === 0) {\r\n    return data;\r\n  }\r\n\r\n  const dataFiltered = data.filter((item) => {\r\n    const dataInArr = Object.values(item);\r\n\r\n    const dataInArrStringed = dataInArr.map((item: string | number | []) => {\r\n      if (Array.isArray(item)) {\r\n        return item.join(\", \");\r\n      }\r\n\r\n      return item.toString();\r\n    });\r\n\r\n    const data = dataInArrStringed.join(\"|\");\r\n\r\n    return data.includes(text.toLowerCase());\r\n  });\r\n\r\n  const dataHighlighted = dataFiltered.map((item) => {\r\n    return Object.keys(item).reduce((acc, currKey) => {\r\n      let itemContent = item[currKey];\r\n\r\n      if (Array.isArray(item[currKey])) {\r\n        itemContent = itemContent.join(\", \");\r\n      } else {\r\n        itemContent = itemContent.toString();\r\n      }\r\n\r\n      return {\r\n        ...acc,\r\n        [currKey]: itemContent.replace(\r\n          new RegExp(text, \"gi\"),\r\n          (match: any) => `<mark>${match}</mark>`\r\n        )\r\n      };\r\n    }, {});\r\n  });\r\n\r\n  return dataHighlighted;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchInput = styled.input`\r\n  height: 30px;\r\n  padding: 2px 8px;\r\n  line-height: 30px;\r\n  font-size: 16px;\r\n  margin-bottom: 15px;\r\n`;\r\n","import * as React from \"react\";\r\nimport { SearchInput } from \"./styled\";\r\n\r\ninterface IProps {\r\n  onSearch: (value: string) => void;\r\n}\r\n\r\nexport const Search = React.memo((props: IProps) => {\r\n  return (\r\n    <SearchInput\r\n      type=\"search\"\r\n      onChange={(e) => props.onSearch(e.target.value)}\r\n      placeholder=\"Search\"\r\n    />\r\n  );\r\n});\r\n","import styled, { css } from \"styled-components\";\r\nimport { SORT_TYPES } from \"../../App\";\r\n\r\nexport const StyledTable = styled.table`\r\n  border-collapse: collapse;\r\n\r\n  width: 100%;\r\n\r\n  th,\r\n  td {\r\n    border: 1px solid black;\r\n    padding: 8px;\r\n  }\r\n\r\n  th {\r\n    padding-bottom: 14px;\r\n  }\r\n\r\n  mark {\r\n    background: #ffb184;\r\n  }\r\n`;\r\n\r\ninterface IHeadingProps {\r\n  active: boolean;\r\n  sortType: string;\r\n}\r\n\r\nexport const Heading = styled.th<IHeadingProps>`\r\n  position: relative;\r\n  transition: background-color 0.15s ease;\r\n\r\n  &:hover {\r\n    background-color: #ededed;\r\n    cursor: pointer;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.active &&\r\n    css`{\r\n      &:after {\r\n        content: '';\r\n        position: absolute;\r\n        left: 50%;\r\n        bottom: 6px;\r\n        transform: translateX(-50%);\r\n        width: 0;\r\n        height: 0;\r\n        border-left: 5px solid transparent;\r\n        border-right: 5px solid transparent;\r\n        border-top: 5px solid tomato;\r\n        opacity: .75;\r\n      }\r\n    }}`}\r\n\r\n  ${(props) =>\r\n    props.sortType === SORT_TYPES.desc &&\r\n    css`{\r\n      &:after {\r\n        transform: rotate(180deg);\r\n      }\r\n    }}`}\r\n`;\r\n","import * as React from \"react\";\r\nimport { StyledTable, Heading } from \"./styled\";\r\nimport { ITableProps } from \"../index\";\r\n\r\nexport const DataLayout = React.memo((props: ITableProps) => {\r\n  const { columns, data, sort } = props;\r\n\r\n  return (\r\n    <StyledTable>\r\n      <thead>\r\n        <tr>\r\n          {columns.map((column) => (\r\n            <Heading\r\n              key={column.key}\r\n              active={sort.key === column.key}\r\n              sortType={sort.type}\r\n              onClick={() => props.handleSort(column.key)}\r\n            >\r\n              {column.title}\r\n            </Heading>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item.firstName + item.lastName + item.tags.toString()}>\r\n            {columns.map((column) => {\r\n              const content = column.render\r\n                ? column.render(item[column.key])\r\n                : item[column.key];\r\n              return (\r\n                <td\r\n                  key={column.key + item.firstName}\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: content\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </StyledTable>\r\n  );\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const PaginationContainer = styled.div`\r\n  margin-top: 15px;\r\n\r\n  .active {\r\n    font-weight: 700;\r\n    background-color: #425fc7;\r\n    color: #fff;\r\n    pointer-events: none;\r\n  }\r\n\r\n  .pagination {\r\n    display: flex;\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  .disabled {\r\n    pointer-events: none;\r\n    background-color: #cdcdcd;\r\n    border-color: transparent;\r\n    color: #888;\r\n  }\r\n\r\n  li {\r\n    cursor: pointer;\r\n    margin: 0 4px;\r\n    border: 1px solid #425fc7;\r\n    border-radius: 4px;\r\n    transition: background-color 0.15s ease, border-color 0.15s ease,\r\n      color 0.15s ease;\r\n\r\n    &:hover {\r\n      background-color: #a6c5ff;\r\n      border-color: #a6c5ff;\r\n    }\r\n\r\n    a {\r\n      display: inline-block;\r\n      padding: 5px 10px;\r\n    }\r\n  }\r\n`;\r\n","import * as React from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport { PaginationContainer } from \"./styled\";\r\n\r\ninterface IProps {\r\n  pageCount: number;\r\n  onPageChange: (selected: number) => void;\r\n}\r\n\r\nexport const Pagination = React.memo((props: IProps) => {\r\n  return (\r\n    <PaginationContainer>\r\n      <ReactPaginate\r\n        pageCount={props.pageCount}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={5}\r\n        onPageChange={(data) => props.onPageChange(data.selected)}\r\n        activeClassName=\"active\"\r\n        containerClassName=\"pagination\"\r\n      />\r\n    </PaginationContainer>\r\n  );\r\n});\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nimport { cutDataPerPage } from \"../helpers\";\r\nimport { Search } from \"./search\";\r\nimport { DataLayout } from \"./dataLayout\";\r\nimport { Pagination } from \"./pagination\";\r\n\r\nconst PAGE_LIMIT = 10;\r\n\r\nexport type IValue = any;\r\n\r\nexport interface IColumn {\r\n  key: string;\r\n  title: string;\r\n  render?: (value: IValue) => IValue;\r\n}\r\n\r\nexport interface ITableProps {\r\n  columns: IColumn[];\r\n  data: { [key: string]: IValue }[];\r\n  sort: { key: string | null; type: string };\r\n  handleSort: (key: string) => void;\r\n}\r\n\r\ninterface ITableAndSearchProps extends ITableProps {\r\n  searchText: string;\r\n  handleSearch: (text: string) => void;\r\n}\r\n\r\nexport const Table = (props: ITableAndSearchProps) => {\r\n  const [limit] = useState(PAGE_LIMIT);\r\n  const [offset, setOffset] = useState(0);\r\n\r\n  const cutParams = {\r\n    data: props.data,\r\n    limit,\r\n    offset\r\n  };\r\n\r\n  const dataToShow = cutDataPerPage(cutParams);\r\n\r\n  return (\r\n    <div>\r\n      <Search onSearch={props.handleSearch} />\r\n      <DataLayout\r\n        columns={props.columns}\r\n        data={dataToShow}\r\n        sort={props.sort}\r\n        handleSort={props.handleSort}\r\n      />\r\n      <Pagination\r\n        pageCount={Math.ceil(props.data.length / limit)}\r\n        onPageChange={(selected) => setOffset(selected * limit)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import * as namor from \"namor\";\r\nimport * as _ from \"lodash\";\r\n\r\nconst newPerson = () => {\r\n  const statusChance = Math.random();\r\n  return {\r\n    firstName: namor.generate({ words: 1, numbers: 0, saltLength: 0 }),\r\n    lastName: namor.generate({ words: 1, numbers: 0, saltLength: 0 }),\r\n    age: Math.floor(Math.random() * 30),\r\n    visits: Math.floor(Math.random() * 100),\r\n    progress: Math.floor(Math.random() * 100),\r\n    status:\r\n      statusChance > 0.66\r\n        ? \"relationship\"\r\n        : statusChance > 0.33\r\n        ? \"complicated\"\r\n        : \"single\",\r\n    tags: _.range(_.random(10)).map(() =>\r\n      namor.generate({ words: 1, numbers: 0, saltLength: 0 })\r\n    )\r\n  };\r\n};\r\n\r\nexport function createData(length: number) {\r\n  return _.range(length).map(() => newPerson());\r\n}\r\n","import * as React from \"react\";\nimport { Table, IColumn } from \"./table\";\nimport { applySearch, handleSortState, sortData } from \"./helpers\";\nimport { useMemo, useState } from \"react\";\nimport { createData } from \"./create-data\";\n\nconst MAX_DATA = 50;\nexport const SORT_TYPES = {\n  asc: \"ASC\",\n  desc: \"DESC\"\n};\n\nconst renderTags = (value: [] | string) => {\n  if (Array.isArray(value)) {\n    return value.join(\", \");\n  }\n\n  return value;\n};\n\ninterface ISortData {\n  key: null | string;\n  type: string;\n}\n\nexport default function App() {\n  const columns: IColumn[] = useMemo(\n    () => [\n      { key: \"firstName\", title: \"First name\" },\n      { key: \"lastName\", title: \"Last name\" },\n      { key: \"age\", title: \"Age\" },\n      { key: \"visits\", title: \"Visits\" },\n      { key: \"status\", title: \"Status\" },\n      { key: \"tags\", title: \"Tags\", render: renderTags }\n    ],\n    []\n  );\n\n  const [data] = useState(() => createData(MAX_DATA));\n  const [sort, changeSort] = useState<ISortData>({\n    key: null,\n    type: SORT_TYPES.asc\n  });\n  const [searchText, changeSearchText] = useState(\"\");\n\n  const handleSort = (key: string) => {\n    changeSort((prevSort) => handleSortState(key, prevSort));\n  };\n\n  const handleSearch = (text: string) => {\n    changeSearchText(text);\n  };\n\n  const dataSorted = sortData({ data, sort });\n  const dataFiltered = applySearch({ text: searchText, data: dataSorted });\n\n  return (\n    <div>\n      <h1>Test (1 lvl)</h1>\n      <h3>Description of the task in the README.md</h3>\n      <Table\n        columns={columns}\n        data={dataFiltered}\n        sort={sort}\n        handleSort={handleSort}\n        searchText={searchText}\n        handleSearch={handleSearch}\n      />\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}